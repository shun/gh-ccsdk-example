// ファイル出力ユーティリティ

import { writeFileSync, mkdirSync } from 'fs';
import { dirname } from 'path';
import type { GeneratedCode } from '../types/index.js';

/**
 * 生成されたコードをファイルに保存するユーティリティ
 */
export class FileWriter {
  /**
   * 生成されたコードをファイルに保存
   */
  static saveGeneratedCode(code: GeneratedCode, outputPath: string): void {
    try {
      // ディレクトリが存在しない場合は作成
      const dir = dirname(outputPath);
      mkdirSync(dir, { recursive: true });

      // ファイルの先頭にメタデータコメントを追加
      const header = this.generateHeader(code);
      const fullContent = header + code.content;
      
      writeFileSync(outputPath, fullContent, 'utf-8');
      
      console.log(`✅ コード生成完了: ${outputPath}`);
      console.log(`🔧 使用したプロバイダー: ${code.provider || 'Unknown'}`);
      
      if (code.totalCostUsd) {
        console.log(`💰 コスト: $${code.totalCostUsd}`);
      }
      
      if (code.explanation) {
        console.log(`📝 説明: ${code.explanation}`);
      }
    } catch (error) {
      console.error(`❌ ファイル保存エラー: ${error}`);
      throw error;
    }
  }

  /**
   * ファイルヘッダーコメントを生成
   */
  private static generateHeader(code: GeneratedCode): string {
    const lines = [
      `// Generated by Claude Code SDK${code.provider ? ` (${code.provider})` : ''}`,
      `// Date: ${new Date().toISOString()}`,
    ];

    if (code.modelName) {
      lines.push(`// Model: ${code.modelName}`);
    }

    if (code.sessionId) {
      lines.push(`// Session ID: ${code.sessionId}`);
    }

    if (code.totalCostUsd) {
      lines.push(`// Cost: $${code.totalCostUsd}`);
    }

    if (code.explanation) {
      lines.push(`// Description: ${code.explanation}`);
    }

    return lines.join('\n') + '\n\n';
  }
}