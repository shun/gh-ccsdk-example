// Generated by Claude Code SDK (Anthropic Direct API)
// Date: 2025-07-24T15:52:15.344Z
// Model: claude-3-haiku-20240307
// Description: 以下は、TypeScriptで実装したシェルソート関数です。



説明:
- `shellSort` 関数は、数値の配列 `arr` を引数に取り、シェルソートアルゴリズムを使用してソートした結果を返します。
- 初期のギャップ(gap)は `length / 2` で計算し、ギャップを徐々に小さくしていくことで効率的にソートを行います。
- 内部ループでは、ギャップ分ずらした要素と現在の要素を比較し、必要に応じて交換を行います。
- ソート後の配列を返します。

この実装は型安全性を重視しており、関数型プログラミングのアプローチを採用しています。エラーハンドリングは特に必要ないため省略しています。また、シェルソートアルゴリズムの特性上、テストが容易に行えます。

/**
 * シェルソートアルゴリズムを使用して、数値の配列をソートします。
 * 
 * @param {number[]} arr - ソートする数値の配列
 * @returns {number[]} - ソート済みの配列
 */
function shellSort(arr: number[]): number[] {
  const length = arr.length;
  let gap = Math.floor(length / 2);

  while (gap > 0) {
    for (let i = gap; i < length; i++) {
      let temp = arr[i];
      let j = i;

      while (j >= gap && arr[j - gap] > temp) {
        arr[j] = arr[j - gap];
        j -= gap;
      }

      arr[j] = temp;
    }

    gap = Math.floor(gap / 2);
  }

  return arr;
}